.. include:: <s5roles.txt>

=============================================
 Easy Slide Shows With reStructuredText & S5
=============================================

:Authors:   David Goodger & Chris Liechti
:Date:      $Date$

.. This document has been placed in the public domain.

.. class:: handout

   This document serves both as a user manual and as a usage example
   of the s5_html.py writer and the rst2s5.py front end.

An introduction to creating presentations (slide shows) with
Docutils/reStructuredText and S5.

*(Hit the space bar or click the mouse button to proceed.)*

.. container:: handout

   The first slide of a presentation consists of all visible text up
   to the first section title.  The document title is also added to
   the footer of all slides.

   The "footer" directive is used to specify part of the slide footer
   text.  It is currently limited to one short line (one paragraph).

   There is no support for the "header" directive in the themes
   included with Docutils.

.. |bullet| unicode:: U+02022
.. footer:: Location |bullet| Date


Introduction
============

``rst2s5.py`` is a Docutils_ front end that outputs HTML for use with
S5_, a "Simple Standards-based Slide Show System" by Eric Meyer.

* Uses reStructuredText as input.

* Presentations can be viewed using any modern web browser that
  supports CSS, JavaScript, and XHTML.  (It even works with IE!)

* A variety of themes are available.

.. _Docutils: http://docutils.sourceforge.net/
.. _S5: http://meyerweb.com/eric/tools/s5/


Basic Usage
===========

.. topic:: Installation
   :class: handout

   Prerequisites: Python and the Docutils_ package have to be
   installed.  See the `Docutils README`__ file for installation
   instructions.

   __ http://docutils.sourceforge.net/README.html

Normal reStructuredText documents are supported.  Each first-level
section is converted into a single slide.  An S5 slide show HTML file
is generated with the following command::

    rst2s5.py presentation.txt presentation.html

Open ``presentation.html`` in any modern graphical web browser.

(Click the "|mode|" button to switch between presentation & handout
modes.  In presentation mode, mouse over to the lower right-hand
corner to display the controls.)

.. topic:: Keyboard Controls
   :class: handout

   The following apply in any supporting browser besides Opera, which
   uses the default Opera Show controls instead.


   .. list-table::
      :header-rows: 1

      * - Action
        - Key(s)
      * - Go to the next slide
        - * [Space bar]
          * [Return]
          * [Enter]
          * [Right arrow]
          * [Down arrow]
          * [Page down]
          * Click the left mouse button outside of the control area,
            Flash object, or movie
      * - Go to the previous slide
        - * [Left arrow]
          * [Up arrow]
          * [Page up]
      * - Go to the title (first) slide
        - [Home]
      * - Go to the last slide
        - [End]
      * - Jump directly to a slide
        - Type the slide number, then hit [Return] or [Enter]
      * - Skip forward *n* slides
        - Type the number of slides to skip, then hit any "go to next"
          key (except [Return] or [Enter])
      * - Skip backward *n* slides
        - Type the number of slides to skip, then hit any "go to
          previous" key
      * - Switch between slideshow and outline view
        - * [T]
          * Click the |mode| button
      * - Show/hide slide controls
        - * [C]
          * Move mouse pointer over control area

   Details of the S5 user interface can be found at `Eric Meyer's S5
   page`__.

.. |mode| unicode:: U+00D8 .. capital o with stroke
__ S5_


Features (1)
============

The S5/HTML Writer supports all the standard Docutils HTML features.
S5-specific features:

.. class:: incremental

* The document title is duplicated on each slide in the S5 footer.

* The ``footer`` directive may be used to define additional text in
  the S5 footer, but it is limited to one line of text.

  .. container:: handout

     This is useful for information such as the date of the
     presentation and/or the location.  The field in the footer is
     left blank if no ``footer`` directive is used.

     Example::

         .. footer:: Location - Date

* An "incremental" class can be assigned to lists and other elements
  to get one-item-at-a-time behavior (like this list).


Features (2): Handouts
======================

``<element class="handout">``

.. container:: handout

   The contents of any element with a "class" attribute value of
   "handout" are hidden in the slide presentation, and are only
   visible when the presentation is printed, or viewed in outline
   mode.  "Handout"-class elements can appear anywhere in the text, as
   often as needed.

   This means that the slides and extra handout material can be
   combined in one document.  The handout can be printed directly from
   the browser, and it will contain more than just silly framed
   slides.  This can be used to provide more detailed information, or
   for speaker's notes.

.. class:: incremental

* Use the "class" directive::

      .. class:: handout

  .. container:: handout

     The ``.. class:: handout`` directive can be used to tag
     individual paragraphs and other elements.  The "class" directive
     applies to the first element immediately following::

         .. class:: handout

         This paragraph will get a ``class="handout"`` attribute.

         This paragraph will not be affected.

     It also applies to multiple elements in the directive content::

         .. class:: handout

            These paragraphs are the content of the "class" directive.
            As such...

            Both paragraphs will *individually* receive
            ``class="handout"`` attributes.

* Use the "container" directive::

      .. container:: handout

  .. container:: handout

     Arbitrary handout blocks can be created using the ``container``
     directive.  The content is treated as one.

* Add a "class" option to certain directives, such as "sidebar" and
  "topic"::

      .. topic:: Extra Material For Handouts
         :class: handout

.. class:: handout

   Handout contents are also visible on the screen if the S5 view mode
   is toggled from "slide show" to "outline" mode.


Examples (1)
============

.. sidebar:: Hint

   Admonitions, tables, sidebars, and other elements can be used in
   on-screen presentations in handouts.  Images too!

   .. image:: images/happy_monkey.png
       :alt: sample image

=====  =====  ======
  A      B    A or B
=====  =====  ======
False  False  False
True   False  True
False  True   True
True   True   True
=====  =====  ======


Examples (2): Incremental Text
==============================

.. class:: incremental

   Paragraphs can be displayed one at a time...

   .. container::

      ... or a bunch at a time.

      This second paragraph is displayed together with the previous
      one by grouping them with the "container" directive.

| `We can also display` `one` `word` `at` `a` `time,`
| `or a phrase` `at a time,`
| `or even` `o`\ `n`\ `e` `l`\ `e`\ `t`\ `t`\ `e`\ `r` `at a time!`
|
| `(But the markup ain't pretty.)`


Examples (3): Incr. Graphics
============================

TBD (insert an example of animation here)


Themes
======

.. class:: incremental

* Several themes are available, and they're easy to adapt.

  .. container:: handout

     Themes from the `S5 tutorial`__ can be used.  These themes are in
     the public domain and may be redistributed freely.

     __ http://meyerweb.com/eric/tools/s5/s5blank.zip

     Sites with other S5 themes:

     * http://meyerweb.com/eric/tools/s5/themes/
     * http://mozilla.wikicities.com/wiki/Firefox_S5:Designs
     * http://lachy.id.au/dev/mozilla/firefox/s5/

     S5 is becoming more popular every day.  Do a web search for "S5
     theme" and you're bound to find plenty of choices.

* The S5 theme can be specified with the ``--theme`` command-line
  option or the ``theme`` configuration file setting.

  .. container:: handout

     Example::

         rst2s5 --theme big-black presentation.txt presentation.html

     The default theme is "default".

* Themes are copied into a ``ui/<theme>`` folder inside the folder
  containing the presentation.

* It is also possible to use URLs and grab the design from another
  website, using the ``--theme-url`` option.


Example Themes
==============

TBD (insert some screenshots below)

* default (simplified version of S5's default theme)
* small-white (black text on a white background)
* small-black (white text on a black background)
* medium-white (large text)
* medium-black
* big-white (very large text, no footers)
* big-black


S5 Theme Files
==============

An S5 theme consists of a directory containing several files:
stylesheets, JavaScript, and graphics.

The generated HTML contains links to the following files:

* slides.css

  - s5-core.css: required to make the slide show run at all
  - framing.css: sets basic placement and size of slide components
  - pretty.css: stuff that makes the slides look good

* outline.css

* print.css

* opera.css

* slides.js

  - iepngfix.htc
  - blank.gif


Custom Themes
=============

TBD

.. container:: handout

   A short tutorial on how to create themes (in German):
   http://yatil.de/s5/dokumentation/9/


Generating a Slide Show (1)
===========================

.. class:: incremental

1. Open a console (terminal, command shell) and go to the folder
   containing your file, say ``presentation.txt``.

2. Run the command::

       rst2s5.py presentation.txt \
                 presentation.html

3. Specify an S5 theme with the ``--theme`` option.  The S5 theme
   files will be copied into a ``ui/<theme>`` folder beside the
   output, ``presentation.html``.  A slide show can also link to a
   theme using the ``--theme-url`` option.


Generating a Slide Show (2)
===========================

.. class:: incremental

4. The default Docutils stylesheet, ``html4css1.css``, will normally
   be embedded in the output HTML.  If you choose to link to a
   stylesheet instead of embedding, you must include a copy.

5. Open ``presentation.html`` in a web browser.

6. Expand the browser window to full-screen mode, and speak.

7. Profit!


Caveats
=======

.. class:: incremental

1. The ``contents`` (table of contents) directive must not be used.
   It changes the CSS class of headings and they won't show up
   correctly in the screen presentation.

.. class:: incremental

2. Subsections ...
------------------

... may be used, but you may have to provide your own stylesheet
support.  Subsections work just fine in handouts though.


Supported Classes: Incremental
==============================

As described earlier,

.. class:: incremental

   * ``.. class:: incremental``

   * ``.. container:: incremental``

   * ::

         .. sidebar:: title
            :class: incremental

   | Requires "``.. include:: <s5roles.txt>``".
   |
   | Includes the useful definition:
   | "``.. default-role:: incremental``".


Supported Classes: Text Size
============================

| :tiny:`tiny` (class & role name: "tiny")
| :small:`small` ("small")
| normal (unstyled)
| :big:`big` ("big")
| :huge:`huge` ("huge")

.. class:: incremental

Requires "``.. include:: <s5roles.txt>``".


Supported Classes: Alignment
============================

.. class:: incremental

   .. class:: left

   Left (class name: "left")

   .. class:: center

   Center ("center" & "centre")

   .. class:: right

   Right ("right")

   (Block elements only.)


Supported Classes: Text Colours
===============================

:black:`black` [black], :gray:`gray`, :silver:`silver`, :white:`white`
[white], :maroon:`maroon`, :red:`red`, :magenta:`magenta`,
:fuchsia:`fuchsia`, :pink:`pink`, :orange:`orange`, :yellow:`yellow`,
:lime:`lime`, :green:`green`, :olive:`olive`, :teal:`teal`,
:cyan:`cyan`, :aqua:`aqua`, :blue:`blue`, :navy:`navy`,
:purple:`purple`

The class names and role names are the same as the colour names.  For
example, "``:orange:`text```" produces ":orange:`text`".

.. class:: incremental

Requires "``.. include:: <s5roles.txt>``".


Supported Classes: Borders
==========================

.. class:: incremental

   An ordinary, unstyled table:

   =========  =======
   Sometimes  borders
   ---------  -------
   are        useful.
   =========  =======

   And after applying "``.. class:: borderless``":

   .. class:: borderless

   =======  ==========  =======
   But      sometimes,  borders
   -------  ----------  -------
   are      **not**     wanted.
   =======  ==========  =======


Supported Classes: Print-Only
=============================

.. class:: handout

   Two classes are provided that only display their contents in
   hardcopy.

.. class:: incremental

   | "print-block" for block elements
   | "print-inline" for inline text

.. class:: handout

   One example is the "target-notes" directive, where these classes
   can be used to expand URLs in printed handouts only.

.. class:: incremental

   Example: the "target-notes" directive::

       .. topic:: Links
          :class: print-block

          .. target-notes::
             :class: print-inline

   May require "``.. include:: <s5roles.txt>``".


Chained Presentations (1)
=========================

Presentation slide shows can be chained together.  This is useful for
including all or part of one presentation in another, and for changing
themes.  Slide numbers are not carried over though.  But there's an
easy way to fake a continuous multi-themed presentation:

1. Generate slide show HTML files with two different names from
   different themes but from the same source text.

2. Include a link to the *next* slide in the *second* theme, `like
   this <default.html#slide22>`__.  Don't forget to
   click the link!


Chained Presentations (2)
=========================

3. To return to the first theme, include a link back to the following
   slide in the *first* theme, `like this
   <inverse.html#slide23>`__.  Again, be sure to click
   the link!


Chained Presentations (3)
=========================

4. Now we're back where we started from, back in the first theme, but
   two slides further on.

In this way, any number of themes can be chained together.


To Do
=====

* Multi-display support:

  - speaker's notes on the laptop screen
  - slides on the projector
  - two views stay in sync
  - presentation controlled from either display

  This will require some serious JavaScript-fu!


That's All, Folks!
==================

.. class:: huge

   Further information:
   http://docutils.sf.net

   Docutils users' mailing list:
   docutils-users@lists.sf.net

   `Any questions?`


.. topic:: Links
   :class: print-block

   .. target-notes:: :class: print-inline
