# -*-perl-*-
# $Id: dom.wrt 768 2006-01-28 03:33:28Z marknodine $
# Copyright (C) 2002-2005 Freescale Semiconductor, Inc.
# Distributed under terms of the GNU General Public License (GPL).

# Writer for debugging internal structures.

=pod
=begin reST
=begin Description
This writer dumps out the internal Document Object Model (DOM, also
known as a doctree) in an indented format known as pseudo-XML.  It
is useful for checking the results of the parser or transformations.
It recognizes the following defines:

-W nobackn      Disables placing "\\n\\" at ends of lines that would
                otherwise end in whitespace.
=end Description
=end reST
=cut

sub package {
    # My -W flags
    use vars qw($nobackn);

    # Defaults for -W flags
    $nobackn = 0 unless defined $nobackn;
}

phase PROCESS {
    sub \#PCDATA = {
	my ($dom, $str) = @_;
	if (! $nobackn) {
	    $dom->{text} =~ s/\n\n/\n\\n\\\n/g;
	    $dom->{text} =~ s/ $/ \\n\\/;
	}
	$dom->{text} .= "\n" unless substr($dom->{text},-1) eq "\n";
	$dom->{text} =~ s/([\x00-\x09\x0b-\x1f\x7f-\xff\x{0100}-\x{ffff}])/sprintf '\u%04x', ord $1/ge;
#	$dom->{text} =~ s/([\x8-\xdb])(.)([\xdc-\xdf])(.)/
#	    sprintf('\u%02x%02x%02x%02x', ord $1, ord $2, ord $3, ord $4)/ge;
	return $dom->{text};
    }

    sub .* = {
	my ($dom, $str) = @_;
	$str =~ s/^/    /mg if defined $str && $str ne '';
	my $attr = defined $dom->{attr} ?
	    join('',map(qq( $_) . (! defined $dom->{attr}{$_} ? '' :
				   ref($dom->{attr}{$_}) eq 'ARRAY' ?
				   qq(="@{$dom->{attr}{$_}}") :
				   qq(="$dom->{attr}{$_}")),
			sort keys %{$dom->{attr}})) : '';
	my $internal = '';
	if (defined $dom->{internal} && %{$dom->{internal}}) {
            my $int = $dom->{internal};
	    $internal = "    .. internal attributes:\n";
            my $spaces = (" " x 9);
            $internal .= "$spaces.transform: $int->{'.transform'}\n";
	    $internal .= "$spaces.details:\n";
	    my $key;
	    foreach $key (sort keys %{$int->{'.details'}}) {
		my $val = $int->{'.details'}{$key};
		my $string;
		if (ref($val) eq 'DOM') {
                    $string = main::ProcessDOM($val);
		    $string =~ s/^/$spaces    /mg;
		    $string = "\n$string";
		} 
		elsif ($val eq "") { $string = " None\n" }
		else { $string = " $val\n" }
		$internal .= "$spaces  $key:$string";
	    }
	}
	return "<$dom->{tag}$attr>\n$str$internal";
    }
}
