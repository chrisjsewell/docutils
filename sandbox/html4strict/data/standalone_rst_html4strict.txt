.. include:: data/standard.txt
.. include:: data/header_footer.txt
.. include:: data/table_colspan.txt
.. include:: data/table_rowspan.txt
.. include:: data/table_complex.txt
.. include:: data/list_table.txt
.. include:: data/custom_roles.txt
.. include:: data/svg_images.txt
.. include:: data/swf_images.txt

Additional html4_strict features
================================

Enumerated lists with nested counters
-------------------------------------

.. class:: nested

#. first point

   #. first sub-point
   #. second sub-point

      With a standard paragraph

      #. first sub-sub-point

   #. third sub-point with a long and silly text just to test the line
      wrapping in this kind of lists.

   * Unordered list nested in enumeration.

   Definition list
     nested in top-level enumeration

#. second top-level point


Description list
----------------

Definition lists are styled like in most dictionaries, encyclopedias
etc. (as well as the LaTeX `description` environment) if given the
``description`` class argument:

.. class:: description

The label
  is bold.

The description
  starts on the same line. If it is longer, you will see that it has a
  hanging indent.


Field list handling
-------------------

The following list demonstrates the problems with the html4css1
approach: the `field-name-limit` setting is given in "number of
characters" but the field name uses a proportional font.

:The field name:  is typeset on the same line, unless it is "long".

:this field name: is considered "long" in the html table rendering by
		  the html4css1 writer with the default setting of
		  ``--field-name-limit=14``.

:iiiiiiiiiiiiiii: a field name that is considered "long" by html4css1
		  with the default setting of `field-name-limit: 14`.

:MMMMMMMMMMMMMM: a field name that is actually longer than the
		 previous one but regarded "short" by html4css1.

With `html4strict`, the field list is typeset as CSS-styled `definition
list`. The default layout is similar to the look with `html4css1`:

.. class:: open

:A long field name: sticks into the field body.

		The field body is pushed to the next line (you can
		suppress this behaviour with the `run-in`_ or
		`fix-labelwidth`_ class arguments).

:Customization: of the field name width is possible with CSS instead
		of the `field-name-limit` configuration setting, for
		example::

		    dl.field-list > dd { margin-left: 6em; }

Styling with class arguments
````````````````````````````

The default style sheet ``html4css2.css`` supports the following class
arguments for alternative styles:

*compact*
  .. class:: compact

  :Feature: No additional space between list items.

  :Option: The ``--compact-field-lists`` command line option (and the
	   corresponding configuration setting) set the `compact`
	   class argument on all "simple" field lists, if not
	   overridden with `open`.

  :Use:  For lists with short field body.

*open*
  .. class:: open

  :Feature: Additional space between list items also in "simple" lists.
  	    (Overrides the ``--compact-field-lists`` command line
	    option and the corresponding configuration setting)

  :Use: For "simple" lists that should keep the space between list items.

*narrow*
  .. class:: narrow

  :Feature: Less indented field body.
  :Use:   For lists with short field names.
  :A long field name:
       sticks into the field body and the field body starts on a
       new line (if not combined with `run-in`_ or `fix-labelwidth`_).

.. _`run-in`:

*run-in*
  .. class:: run-in

  :Feature: Field body starts on the same line also after long field
	    names.

  :A long field name: sticks into the field body which continues on
  			 the same line.

  :The next field name:  and field body should align.

.. _`fix-labelwidth`:

*fix-labelwidth*
  .. class:: fix-labelwidth

  :Feature:  The width of the field name (label) is fixed. Long labels
  	     wrap.

  :Problem: Non-wrappable field names are truncated.

  :a_very_long_field_name:
  	     is truncated if it can not wrap.

  	     The generated colon wraps in some browsers (Midori).

  :this long field name: will wrap.

  :the next field name:  and field body should align.

	     .. If the field name is wrapped but the field body just
		one line, following field bodies "float up" if not
		prevented by a dummy dd:after element in the CSS.


.. include:: data/errors.txt

.. footer:: |valid-xhtml10| |valid-CSS2|

.. |valid-xhtml10| image:: http://www.w3.org/Icons/valid-xhtml10
   :height: 31
   :width: 88
   :alt: Valid XHTML 1.0!
   :target: http://validator.w3.org/check?uri=referer

.. |valid-CSS2| image:: http://jigsaw.w3.org/css-validator/images/vcss
   :height: 31
   :width: 88
   :alt: Valid CSS 2.1!
   :target: http://jigsaw.w3.org/css-validator/check/referer
