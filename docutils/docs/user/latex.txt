================================
 Generating LaTeX with Docutils
================================

:Author: Engelbert Gruber
:Contact: grubert@users.sourceforge.net
:Revision: $Revision$
:Date: $Date$
:Copyright: This document has been placed in the public domain.

.. contents::


Introduction
============

Producing LaTeX code from reST input can be done in at least two ways:

a. Transform the internal markup into corresponding LaTeX markup.
   For example, a section title would be written with the LaTeX section
   command: ``\section{this section title}``.

   This can be constrained by the LaTeX document class
   and may require hacking around bugs/features in LaTeX,
   but it produces a readable LaTeX file.

   If you prefer this approach, try ``rst2latex.py``.

b. Use LaTeX as a typesetting system to produce the desired document
   structure without bothering with the usual LaTeX idioms for representing
   document structure information.

   This is not constrained by a particular LaTeX document class
   and therefore requires hacking around bugs/features in LaTeX.
   But it produces a hard to read LaTeX file.

   ``rst2newlatex.py`` adds a lot of LaTeX macros and uses LaTeX as a
   typesetter without caring about producing readable LaTeX files.

This documents describes the "latex2e" writer (``rst2latex.py``).

PDF generation
==============

Most probably, LaTeX code is not the desired end-format of the document.
LaTeX offers three ways to generate PDF documents from the LaTeX source:

pdflatex :
  Generates a PDF document directly from the LaTeX file. As always one
  might need to call it twice (thrice) to get internal references correct.

latex dvipdfm :
  Use ``latex`` to generate a DVI file and ``dvipdfm`` to produce a PDF file.
  If you will take this approach, specify ``documentoptions=dvipdfm``.

latex dvips ps2pdf :
  Produce a DVI file with ``latex``, postscript with ``dvips`` and PDF with
  ``ps2pdf``.

The Rubber_ utility can be used to automatically run LaTeX the required
number of times and delete "spurious" files.

.. _Rubber: http://iml.univ-mrs.fr/~beffara/soft/rubber/


Configuration
=============

Configuration can be done in two ways:

1. Options to the Docutils tool as command line option\ [#]_ or in
   configuration files\ [#]_.

2. Via LaTeX packages or `custom style sheets`_.

.. [#] Run ``rst2latex.py --help`` to see the available command-line
   options.

.. [#] See `Docutils Configuration`_ for details about configuration files.

.. _Docutils Configuration:
   http://docutils.sourceforge.net/docs/user/config.html


Custom style sheets
-------------------

Specifying style sheets
~~~~~~~~~~~~~~~~~~~~~~~~

The option::

  --stylesheet=STYLESHEET

references STYLESHEET using the command::

  \usepackage{STYLESHEET}

if STYLESHEET has no extension or the extension ``.sty``. (The extension
will be dropped.)

With any other extension, the command::

 \input{STYLESHEET}

is used.

It is possible to specify multiple style sheets (see examples below).

If the ``--embed-stylesheet`` option is set, the content of STYLESHEET
is inserted instead.

Examples
""""""""

* Times Roman fonts with `mathptmx` package::

    --stylesheet==mathptmx

  or ::

    --stylesheet==mathptmx.sty

* Input ``preamble.tex``::

   --stylesheet==preamble.tex

  (any extension except ``.sty`` is allowed)

* Use three style sheets:

  :mathptmx: Times fonts,
  :parskip:  separate paragraphs by increased lineskip,
  :``preamble.tex``: custom style sheet::

    --stylesheet==mathptmx,parskip,preamble.tex

Images
======

Images are included in LaTeX by the `graphicx` package. The supported
image formats depend on the used driver (dvi, dvips, pdftex, ...).

If pdf-image inclusion in pdf files fails, specify
``--graphicx-option=pdftex`` or ``--graphicx-option=auto``.


Raw LaTeX in the document source
================================

By means of the reST-raw directive one can give commands directly to
LaTeX, e.g. forcing a page break::

  .. raw:: latex

     \newpage


Or setting formulas in LaTeX::

  .. raw:: latex

     \[x^3 + 3x^2a + 3xa^2 + a^3,\]


Or making a colorbox: If someone wants to get a red background for a textblock,
she/he can put \definecolor{bg}{rgb}{.9,0,0} into style.tex and in
reStructuredText do something like this::

  |begincolorbox|
  Nobody expects the spanish inquisition.
  |endcolorbox|

  .. |begincolorbox| raw:: latex

     \\begin{center}
     \\colorbox{bg}{
     \\parbox{0.985\\linewidth}{

  .. |endcolorbox| raw:: latex

     }}
     \\end{center}


How to configure the ...
========================

document class
--------------

The LaTeX document class can be set using the
``--documentclass=DOCUMENTCLASS`` option.
It cannot be changed in a style sheet.

Default:
  article

Some possibilities:
  report, book, scrarticle, scrreport, scrbook, ...

paper size
----------

Paper geometry can be changed using ``--documentoptions`` or
``\geometry{OPTIONLIST}`` LaTeX commands in a style sheet.

Default:
  a4paper

Some possibilities:

* a4paper, b3paper, letterpaper, executivepaper, legalpaper
* landscape, portrait, twoside.

and lots of other options for setting margins (see the `geometry manual`_).

Example:
  LaTeX command::

    \geometry{a5paper,landscape}

  command line argument::

    --documentoptions=a5paper,landscape

.. _geometry manual:
   http://dante.ctan.org/CTAN/macros/latex/contrib/geometry/geometry.pdf

paragraph indent
----------------

Default (in most document classes):
  indent the first line in a paragraph unless it is the first line of a
  chapter, section, subsection, or subsubsection.

Example:
  To set paragraph indentation to zero but add a vertical space between
  paragraphs use the LaTeX command::

    \usepackage{parskip}

  or the command line argument::

    --stylesheet=parskip

Docutils special commands
-------------------------

The generated LaTeX documents should be kept processable by a standard LaTeX
installation, therefore the document contains default settings. The
stylesheet is included after the default definitions, so these definitions
can be changed with ``\renewcommand`` in the stylesheet.

Some definitions are only needed with special rst constructs. For these,
fallback definitions are provided:

* only if needed in the document,
* using ``\providecommand``,
* *after* the custom stylesheet.

By convention, these fallback definitions use the prefix ``\DU``\ [#]_.
The stylesheet can define alternative implementations with ``\newcommand``.

.. [#] for Documentation Utilities = Docutils


admonition width
----------------

The width of admonitions.

Default:
  ``0.9*textwidth``

Example:
  set to 70% of text width::

    \setlength{\admonitionwidth}{0.7\textwidth}

docinfo width
-------------

The width for the docinfo table.

Default:
  ``0.9*textwidth``

Example:
  set to 70% of text width::

  \setlength{\docinfowidth}{0.7\textwidth}

rubric style
------------

How to lay out the "rubric" element.

Default:
  subsection style italic, centred::

    \newcommand{\rubric}[1]{\subsection*{~\hfill {\it #1} \hfill ~}}

Example:
  The (re)definition::

    \renewcommand{\rubric}[1]{\subsection*{
      ~\hfill {\color{red} #1} \hfill ~}}

  sets rubric to subsection style in red.


line spacing
------------

Set with package `setspace`, which gives singlespace, onehalfspace and
doublespace commands.

Example:
  Alternatives to get document wide double spacing:

  LaTeX commands ::

    \usepackage{setspace}
    \doublespacing

  or ::

    \linespread{1.55}

  or add ``doublesp`` to the ``--documentoptions`` and e.g. ::

    \setstretch{1.7}

  for bigger linespacing.

literal blocks
--------------

The command line option ``--literal-env`` allows the specification of the
environment to use with literal blocks, e.g. ``--literal-env=verbatim`` or
``--literal-env=lstlisting``.

The environment is used for literal-blocks when possible\ [#]_.

Example:
  The ``lstlisting`` environment is highly configurable (as documented in
  listings.pdf_), for instance ::

    \renewcommand{\ttdefault}{txtt}
    \lstset{language=Python,
            morekeywords=[1]{yield}
    }
    \lstloadlanguages{Python}
    \lstset{
      basicstyle=\ttfamily,
      keywordstyle=\bfseries,
      commentstyle=\rmfamily\itshape,
      stringstyle=\slshape,
    }
    \lstset{showstringspaces=false}
    \lstset{columns=fullflexible,
    	 basewidth={0.5em,0.4em}}

.. [#] A literal-block element, when processed by a Docutils writer might
   have it's origin in a markup with "::" syntax or a ".. parsed-literal::"
   directive.

   A LaTeX verbatim environment is only usable if there is no other markup
   contained in the literal-block.

.. _listings.pdf:
    http://dante.ctan.org/CTAN/macros/latex/contrib/listings/listings.pdf


interpreted text roles
----------------------

The rst `role directive`_ allows defining custom `text roles`_
that mark parts of inline text (spans) with a class argument, e.g. ::

  .. role:: smallcaps

  :smallcaps:`Fourier` transformation

This is transformed to the LaTeX code::

  \DUspan{smallcaps}{Fourier} transformation

with ``\DUspan`` defined in a way that a role with class "foo" will look for
a styling command named ``\docutilsrolefoo``.
For example the definition ::

  \newcommand{\docutilsrolesmallcaps}{\scshape}

in the custom stylesheet will give the expected result (if the chosen font
supports small caps).

It is possible to define multiple class arguments for a custom role. These
will be translated to

  \DUspan{argA,argB,argC}{<content>}

which is equivalent to::

  {\docutilsroleargA \docutilsroleargB \docutilsroleargC{<content>}}

i.e. only the last styling command may take an argument.\ [#]_

To ensure that the order of class arguments is without effect (as in
HTML/CSS), it is recommended to use only declarations, e.g. ``\scshape``
instead of ``\textsc``, for the styling macros.

It is also possible to specify an alternative definition of ``\DUspan`` in
the style sheet.

.. [#] This differs from the implementation in Docutils version up to 0.5,
   where the styling commands where nested like
   ``\docutilsroleargA{\docutilsroleargB{<content>}}``.

.. _role directive:
   http://docutils.sourceforge.net/docs/ref/rst/directives.html#role

.. _text roles:
   http://docutils.sourceforge.net/docs/ref/rst/roles.html

text font
---------

Unfortunately, LaTeX cannot use the fonts of the operating system directly
[#]_ but needs specially installed fonts with additional supporting files.
The `LaTeX Font Catalogue`_ provides information and examples for a wide
range of fonts available for use with LaTeX.

Default:
  Computer Modern (CM)

Alternative fonts can be selected by specifying the corresponding LaTeX
package or by changing the font-default macros.
Packages can be specified as arguments to the ``--stylesheet`` option or in
a custom style sheet. (Passing options to a package is only possible in the
style sheet.)

Example:
  LaTeX code::

    \usepackage{lmodern} % LaTeX Modern, Type 1 variant of CM

  command line argument::

    --stylesheet=lmodern

  Packages can be combined. The ubiquitous "Times/Helvetica/Courier"
  combination is achieved by::

    \usepackage{mathptmx}             % times for serif and math
    \usepackage[scaled=.90]{helvet}   % downscaled helvetica for sans serif
    \usepackage{courier}	      % courier for teletype (monospace)

  Changing the font-default macros in a custom style sheet::

    \renewcommand{\ttdefault}{txtt}


When generating PDF-files from LaTeX, the files can become smaller if
standard Postscript fonts are used.

The following table lists the font packages for standard Postscript fonts
(see `Using common Postscript fonts with LaTeX`_ for details):


============ ============ ============= ============= ============
Package      Roman        Sans Serif    Typewriter    Math
============ ============ ============= ============= ============
(none)       CM Roman     CM Sans Serif CM Typewriter CM Math

mathpazo     Palatino                                 Palatino

mathptmx     Times                                    Times

helvet                    Helvetica

avant                     Avant Garde

courier                                 Courier

chancery     Zapf
             Chancery

bookman      Bookman      Avant Garde   Courier

newcent      New Century  Avant Garde   Courier
             Schoolbook

charter      Charter

utopia	     Utopia
============ ============ ============= ============= ============

Extended versions of the standard Postscript fonts including accented chars,
Greek and Cyrillic are available with the `TeX Gyre`_ bundle which is part
of, e.g., `TeX Live`_.

.. [#] XeTeX_ can, but is not (yet) supported by Docutils

.. _XeTeX: http://scripts.sil.org/xetex
.. _LaTeX Font Catalogue:
   http://www.tug.dk/FontCatalogue/
.. _TeX Gyre: http://www.gust.org.pl/projects/e-foundry/tex-gyre
.. _Using common PostScript fonts with LaTeX:
   http://dante.ctan.org/CTAN/macros/latex/required/psnfss/psnfss2e.pdf
.. _TeX Live: http://tug.org/texlive/

text encoding
-------------

Default:
  The generated LaTeX documents are in the input encoding.

Example:
  Use latin1 text encoding for the LaTeX source::

    --output-encoding=latin1

* If the source document is in utf-8 encoding (or
  ``--output-encoding=utf-8`` is set), LaTeX needs Unicode support (the
  `ucs` package). If this is not available, specify a different
  output-encoding, e.g. ``latin1``.

* If LaTeX issues a Warning about unloaded/unknown characters adding ::

    \PreloadUnicodePage{n}

  (where *n* is the Unicode page-number) to the style sheet might help.

  .. _LaTeX Unicode: http://www.unruh.de/DniQ/latex/unicode/

* Unicode box drawing characters:

  - generate LaTeX code with ``--output-encoding=utf-8:strict``.

  - In the latex file, edit the preamble to load "ucs" with "postscript"
    option and also load the pstricks package::

        \usepackage{shortvrb}
      - \usepackage{ucs}
      + \usepackage[postscript]{ucs}
      + \usepackage{pstricks}
        \usepackage[utf8x]{inputenc}

  - Convert to PDF with ``latex``, ``dvips``, and ``ps2pdf``.


font encoding
-------------

The LaTeX font encoding can be selected with option ``--font-encoding``.

Default:
  OT1 with package "ae"

  "ae" uses the original 7-bit encoded CM fonts (the "OT1" encoding) and
  combines accented characters from base char and accent glyph. This can
  lead to suboptimal appearance and to problems if text shall be extracted
  from (or found in) the generated PDF document.

The recommended setting for Latin based scripts is "T1" together with a
T1-encoded "Type 1" (vector) font:

  In up-to-date LaTeX distributions (MikTeX, `TeX Live`_) T1 encoded
  standard postscript fonts belong to the `core` while the "ae" (and even
  more the "aeguill") workarounds are optional (and not always installed by
  default).

Example:
  ::

    --font-encoding=T1 --stylesheet=mathpazo

.. _LaTeX font encoding:
   http://dante.ctan.org/CTAN/macros/latex/doc/encguide.pdf


hyphenation
-----------

The amount of hyphenation is influenced by ``\hyphenpenalty``, setting it to
10000 almost prevents hyphenation. As this produces lines with more space
between words one should increase LaTeX's ``\tolerance`` for this.

Example:
  ::

    \hyphenpenalty=5000
    \tolerance=1000

title page
----------

Currently the title page only shows the title and subtitle, date and author
are shown in the "docinfo" table. To change the titlepage layout one must
redefine the ``\maketitle`` command in the stylesheet

Example
 ::

  \makeatletter
  \renewcommand{\maketitle}{
    \begin{titlepage}
      \begin{center}
      \textsf{TITLE \@title} \\
      Date: \today
      \end{center}
    \end{titlepage}
  }
  \makeatother

The macro ``\@title`` contains the title.


section numbering
-----------------

The options ``--section-numbering`` and ``--use-latex-toc``, both
influence section numbering.

* If ``--use-latex-toc`` is specified the latex-writer generates
  LaTeX output, so that LaTeX generates a table of contents and
  generates section numbers. Usually one does not want to have
  section numbers generated by Docutils in this case, therefore
  ``--no-section-numbering`` should be specified.

  The advantage is that LaTeX does put page numbers into the
  table of contents, but the section depth is limited by the
  used LaTeX document class, usually to four levels.

* If section numbering and LaTeX table of contents is used LaTeX and
  Docutils will number sections. To switch off displaying of LaTeX's
  numbers one has to add following lines to the stylesheet ::

    % no section number display
    \makeatletter
    \def\@seccntformat#1{}
    \makeatother
    % no numbers in toc
    \renewcommand{\numberline}[1]{}

  This enables to have the same section numbers as in other Docutils
  writers and page numbers in the table of contents.

page numbering
--------------

Example:
  Number pages by chapter

  This can be accomplished with ::

    \usepackage{chappg}

  From the documentation

    Basic operation of the package is to redefine ``\thepage`` to be
    ``\thechapter-\arabic{page}``, and to cause the page number to be reset
    (to 1) at the start of each chapter.  So the pages of chapter 3 will
    be numbered 3-1, 3-2, ..., and the pages of appendix B will be
    numbered B-1, B-2, ...

  See documentation for details and other possibilities.


list of figures/tables
----------------------

Can be generated using `raw LaTeX in the document source`_:
A list of figures with the LaTeX command ``listoffigures``,
a list of tables by ``\listoftables``.

Example:
  ::

    .. raw:: latex

       \listoffigures


Problems
========

Open to be fixed or open to discussion. See also the discussion and
proposals in the `latex-variants`_ sandbox project.

.. _latex-variants:
   http://docutils.sourceforge.net/sandbox/latex-variants/README.html

Lists
-----

Definitions in definition lists start on the same line as the term. Putting
``\leavevmode`` after the term results in a new newline if the definition
starts with a bullet list or similar.

footnotes and citations
-----------------------

Initially both were implemented using figures, because hyperlinking back
and forth seemed to be impossible. Later images were put into figures.

This results in footnotes images and figures possibly being mixed at page
foot.

* Use LaTeX footnotes and citations for printing or more complex layout.
* Footnotes and citations done with figures might excell in hyperlink
  support.

If ``use-latex-citations`` is used a bibliography is inserted right at
the end of the document. *This should be customizable*.

If ``use-latex-citations`` is used adjacent citation references (separated
only by a single space or a newline) are combined to a single citation
group, i.e. ``[cite1]_ [cite2]_`` results in ``\cite{cite1,cite2}``.

Tables
------

:Tablewidth: reST-documents line length is assumed to be 80 characters. The
             tablewidth is set relative to this value. If someone produces
             documents with line length of 132 this will fail.

             Table width is tried to fit in page even if it is wider than
             the assumed linewidth, still assumed linewidth is a hook.

* In tools.txt the option tables right column, there should be some more
  spacing between the description and the next paragraph "Default:".

  Paragraph separation in tables is hairy.
  see http://www.tex.ac.uk/cgi-bin/texfaq2html?label=struttab

  - The strut solution did not work.
  - setting extrarowheight added ad top of row not between paragraphs in
    a cell. ALTHOUGH i set it to 2pt because, text is too close to the topline.
  - baselineskip/stretch does not help.
* Should there be two hlines after table head and on table end ?
* Table: multicol cells are always {l}.
* The contents of a rowspan cell do not influence table height.
  (Maybe if we put a tabular inside ?)
* Table heads and footer for longtable (firstpage lastpage ..).
* Table cells with multirow and multicolumn
* literal-blocks in table cells:

  - If verbatim or flushleft is used one gets vertical space above and below.
  - This is bad for the topmost paragraph in a cell, therefore the writer
    uses raggedright.
  - Ragged right fails on followup paragraphs as the vertical space would be
    missing.
* Use tabularx column type ``X`` and let latex decide width.
* csv-tables do not have a colwidth.


Notes
~~~~~

* table-style booktabs: booktabs.sty 1.00 does not work with longtable.
* If default table-style is not booktabs, but the document contains a table
  with class booktabs, one has to add the latex package booktabs. That means
  put the line ::

    \usepackage{booktabs}

  into your latex-style.

Wrapping Figures
----------------
Wrapping text around figures is currently not supported.
(Requires the `wrapfig`_ package.)

.. _wrapfig: http://dante.ctan.org/CTAN/help/Catalogue/entries/wrapfig.html


Miscellaneous
-------------

* Selection of LaTeX fontsize configurable.
* Assumed reST linelength for table width setting configurable.
* literal-block indentation configurable.
* recognize LaTeX and replace by ``\LaTeX``.
* Support embed-stylesheet.
* Sidebar handling.
* Pdfbookmark level 4 (and greater) does not work (might be settable but OTOH).
* center subsection{Abstract} gives a LaTeX error here.
  ``! LaTeX Error: Something's wrong--perhaps a missing \item.``
  Committed a HACK: centering by hfill.
* Document errors are also too silent.
* Use optionlist for docinfo, the table does only work for single page.
* Consider peter funk's hooks for TeXpert:

  * Define his own document preamble (including the choice to
    choose his own documentclass.  That would make the ``--documentclass``
    option superfluous).  I suggest to call this option ``--preamble``
  * Use two additional hooks to put additional stuff just behind the
    ``\begin{document}`` and just before the ``\end{document}`` macros.
    Typical uses would be ``\tableofcontents``, ``\listoffigures`` and
    ``\appendix``, ``\makeindex``, ``\makeglossary`` and some such
    for larger documents.

* The intentional problematic error in docs/user/rst/demo.txt is not
  referring anywhere.
* Footnotes are not all on the same page (as in
  docs/user/rst/demo.txt) and do not link back and forth.
* No link to system errors.
* Hyperlinks are not hyphenated; this leads to bad spacing. See
  docs/user/rst/demo.txt 2.14 directives.
* Meta keywords into PDF ?
* Pagestyle headings does not work, when sections are starred.
* For additional docinfo items: the field_body is inserted as text, i.e. no
  markup is done.
* Multiple author entries in docinfo (same thing as in html).

* keep literal-blocks together on a page, avoid pagebreaks.

  failed experiments up to now: samepage, minipage, pagebreak 1 to 4 before
  the block.

* Custom roles based on an existing role are currently not supported (i.e.
  the additional class argument is silently ignored by the latex2e writer).
