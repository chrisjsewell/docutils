============================
 Docutils_ Code Introduction
============================

:Author: John Mulder 
	w/ text borrowed from throughout the docutils docstrings.
:Contact: johnmulder@gmail.com
:Revision: $Revision:  $
:Date: $Date: 2007-02-28 $
:Copyright: This document has been placed in the public domain.
:Abstract: This is the introduction to the Docutils source code
:Prerequisites: You will need some basic Python_ knowledge, as 
  well as some understanding of ReStructuredText_.
  
.. _Docutils: http://docutils.sourceforge.net/
.. _Python: http://www.python.org
.. _ReStructuredText: 
  http://docutils.sourceforge.net/docs/user/rst/quickstart.html
.. contents::

Obtaining the Docutils Code
===========================

The latest snapshot of the docutils code is located at sourcforge as a 
tarball_. 

Alternatively, you can get direct access to the subversion server as described
on the docutils site in the `repository instructions`_.

.. _tarball: http://docutils.sourceforge.net/docutils-snapshot.tgz

.. _repository instructions: 
  http://docutils.sourceforge.net/docs/dev/repository.html

Organization of the Docutils Code
=================================

Within the docutils directory, the package for docutils is in a 
subdirectory also called docutils. This directory contains both
modules and subpackages:

Modules:

- __init__.py
- core.py
- frontend.py
- io.py
- nodes.py
- statemachine.py
- urischemes.py
- utils.py

Subpackages:

- languages
- parsers
- readers
- transforms
- writers

Modules in Docutils
===================

__init__.py
-----------

The __init__ module contains base classes and
functions that are inherited in other modules 
throughout the docutils package.

Classes:

- ApplicationError(StandardError): Exception base class for all Docutils-specific exceptions???
- DataError(ApplicationError):???
- SettingsSpec: Runtime settings specification base class.
- TransformSpec: Runtime transform specification base class.
- Component(SettingsSpec, TransformSpec): Base class for Docutils components. A component is a reader, parser, or writer???

core.py
-------

The core module contains the `Publisher` object 
Calling the ``publish_*`` convenience functions (or instantiating a
`Publisher` object) with component names will result in default
behavior.  For custom behavior (setting component options), create
custom component objects first, and pass *them* to
``publish_*``/`Publisher`.  See `The Docutils Publisher`_.

.. _The Docutils Publisher: http://docutils.sf.net/docs/api/publisher.html
  
frontend.py
-----------
  
io.py
-----

nodes.py
--------
  
statemachine.py
---------------
  
urischemes.py
-------------
  
utils.py
--------

Subpackages in Docutils
=======================

languages
---------

parsers
-------

readers
-------

transforms
----------

writers
-------

.. |---| unicode:: 8212 .. em-dash
  :trim:

..
  Local Variables:
  mode: indented-text
  indent-tabs-mode: nil
  sentence-end-double-space: t
  fill-column: 70
  End:
