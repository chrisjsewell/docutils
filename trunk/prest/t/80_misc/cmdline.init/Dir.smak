# -*-perl-*-
{
    %POSTPROC_FILE =
	(badopt => q(| head -2),
	 noargs => q(| head -1),
	 opt_h  => q(| egrep '^(Description of|(Defines|Documentation) for)'),
	 opt_V  => q(| head -1),
	 );

    %PREST_FILE_FLAGS =
	(badopt   => q(-Q),
	 noargs   => q(-D),	# Cancels out the noargs.rst argument
	 opt_d    => q(-d),
	 opt_dx2  => q(-d -d),
	 opt_dxq3 => q(-d -d -d),
	 opt_h    => q(-h),
	 opt_ignore_include_errs => q(-D ignore-include-errs),
	 opt_no_file_insertion => q(-D file_insertion_enabled=0),
	 opt_relax_citation => q(-D relax-citation-characters),
	 opt_report_info    => q(-D source=1 -D report=info),
	 opt_report_warning => q(-D source=1 -D report=warning),
	 opt_report_error   => q(-D source=1 -D report=error),
	 opt_report_severe  => q(-D source=1 -D report=severe),
	 opt_V    => q(-V),
	 );
}

no_opt_w.txt.out:
	{
            my($maker, $target, $deps, $matches) = @_;

	    use vars qw($PERL $PERL_FLAGS $LIB $SCRIPT);

	    my $cmd = qq($PERL $PERL_FLAGS -I $LIB) .
		qq( -e 'use Text::Restructured;') .
		qq( -e 'my \$rST = Text::Restructured->new({foo => "bar"}, "NULL 0.0");') .
		qq( -e 'open TARGET, ">$target";') .
		qq( -e 'print TARGET sprintf("opts: %s\\n", join(" ", keys %{\$rST->{opt}}))');
	    execute $cmd;
	}
